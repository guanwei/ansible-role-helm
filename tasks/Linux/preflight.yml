---
- name: Get Helm latest release
  uri:
    url: "https://api.github.com/repos/helm/helm/releases/latest"
    method: GET
    return_content: true
    status_code: 200
    body_format: json
    validate_certs: false
  retries: 3
  delay: 2
  register: helm_latest_release
  until: helm_latest_release.status == 200
  when: helm_version == 'latest'

- name: Set Helm version to latest version
  set_fact:
    helm_version: "{{ helm_latest_release.json.tag_name | regex_replace('^v', '') }}"
  when: helm_version == 'latest'

- name: Check current version
  shell: |
    {{ helm_install_dir }}/helm version --client --template {{ "'{{ if .Version }}{{ .Version }}{{ else }}{{ .Client.SemVer }}{{ end }}'" }}
  register: helm_current_version_result
  failed_when: no
  changed_when: no

- name: Set current version
  set_fact:
    helm_current_version: "{{ helm_current_version_result.stdout | regex_replace('^v', '') }}"
  when: helm_current_version_result.rc == 0

- name: Current version
  debug:
    msg: "{{ helm_current_version }}"
  when: helm_current_version_result.rc == 0
# - name: Check if Helm is installed
#   stat:
#     path: "/usr/local/bin/helm"
#   register: helm_is_installed

# - name: Gather currently installed Helm version
#   shell: /usr/local/bin/helm version --client | awk -F'"' '{print $2}'
#   changed_when: false
#   register: helm_current_version
#   when: helm_is_installed.stat.exists
